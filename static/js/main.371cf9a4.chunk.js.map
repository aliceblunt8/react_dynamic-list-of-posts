{"version":3,"sources":["api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["POSTS_URL","getUserPosts","userId","a","fetch","response","json","result","data","posts","filter","post","getPostDetails","postId","PostsList","handleClick","postIsOpened","activePostId","className","map","key","id","title","type","onClick","defaultProps","NewCommentForm","addNewComment","onSubmit","event","preventDefault","target","name","email","body","newComment","value","reset","placeholder","COMMENTS_URL","getPostComments","comments","comment","PostDetails","useState","addPost","addComments","areVisible","changeVisibility","useEffect","postfromServer","commentsfromServer","fetchPostDetails","handleDelete","commentId","url","method","deleteComment","then","length","options","JSON","stringify","addComment","App","updatePosts","selectedPostId","setPostId","selectedUserId","setUserId","postIsSelected","updatePostSelect","fetchData","onChange","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.371cf9a4.chunk.js","sourcesContent":["const POSTS_URL = 'https://mate-api.herokuapp.com/posts';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${POSTS_URL}`);\n  const result = await response.json();\n  const posts = await result.data;\n\n  if (userId === 0) {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${POSTS_URL}/${postId}`);\n  const result = await response.json();\n  const post = await result.data;\n\n  return post;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = (\n  { posts,\n    handleClick,\n    postIsOpened,\n    activePostId },\n) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>{`[User #${post.userId}]`}</b>\n            {post.title}\n          </div>\n          {postIsOpened && post.id === activePostId\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleClick(post.id, 'close')}\n              >\n                Close\n              </button>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleClick(post.id, 'open')}\n              >\n                Open\n              </button>\n            )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string.isRequired,\n  })),\n  handleClick: PropTypes.func.isRequired,\n  postIsOpened: PropTypes.bool.isRequired,\n  activePostId: PropTypes.number.isRequired,\n};\n\nPostsList.defaultProps = {\n  posts: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addNewComment }) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { name, email, body } = event.target;\n\n    const newComment = {\n      postId,\n      name: name.value,\n      email: email.value,\n      body: body.value,\n    };\n\n    addNewComment(newComment);\n    event.target.reset();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addNewComment: PropTypes.func.isRequired,\n};\n","const COMMENTS_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${COMMENTS_URL}`);\n  const result = await response.json();\n  const comments = await result.data;\n\n  return comments.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = (commentId) => {\n  const url = `${COMMENTS_URL}/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options);\n};\n\nexport const addComment = (newComment) => {\n  const url = `${COMMENTS_URL}`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n  };\n\n  return fetch(url, options);\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment, addComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, addPost] = useState([]);\n  const [comments, addComments] = useState([]);\n  const [areVisible, changeVisibility] = useState(true);\n\n  useEffect(() => {\n    const fetchPostDetails = async() => {\n      const postfromServer = await getPostDetails(postId);\n      const commentsfromServer = await getPostComments(postId);\n\n      addPost(postfromServer);\n      addComments(commentsfromServer);\n    };\n\n    fetchPostDetails();\n  }, [postId]);\n\n  const handleDelete = (commentId) => {\n    deleteComment(commentId)\n      .then(() => getPostComments(postId))\n      .then(result => addComments(result));\n  };\n\n  const updateComments = (newComment) => {\n    addComment(newComment)\n      .then(() => getPostComments(postId))\n      .then(result => addComments(result));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </section>\n\n      {comments.length > 0 && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => changeVisibility(!areVisible)}\n          >\n            {areVisible\n              ? (`Hide ${comments.length} comments`)\n              : (`Show ${comments.length} comments`)}\n          </button>\n\n          {areVisible && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li key={comment.id} className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => handleDelete(comment.id)}\n                  >\n                    X\n                  </button>\n                  <h4>{comment.name}</h4>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} addNewComment={updateComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getUserPosts } from './api/posts';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [posts, updatePosts] = useState([]);\n  const [selectedPostId, setPostId] = useState(0);\n  const [selectedUserId, setUserId] = useState(0);\n  const [postIsSelected, updatePostSelect] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const result = await getUserPosts(selectedUserId);\n\n      updatePosts(result);\n    };\n\n    fetchData();\n  }, [selectedUserId]);\n\n  const handlePostSelection = (postId, action) => {\n    switch (action) {\n      case 'open':\n        setPostId(postId);\n        updatePostSelect(true);\n        break;\n      case 'close':\n        setPostId(0);\n        updatePostSelect(false);\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            handleClick={handlePostSelection}\n            postIsOpened={postIsSelected}\n            activePostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postIsSelected && <PostDetails postId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}